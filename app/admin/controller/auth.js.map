{
    "version": 3,
    "sources": [
        "..\\..\\..\\src\\admin\\controller\\auth.js"
    ],
    "names": [
        "Base",
        "require",
        "module",
        "exports",
        "loginAction",
        "username",
        "post",
        "password",
        "admin",
        "model",
        "where",
        "find",
        "think",
        "isEmpty",
        "fail",
        "console",
        "log",
        "md5",
        "password_salt",
        "id",
        "update",
        "last_login_time",
        "parseInt",
        "Date",
        "now",
        "last_login_ip",
        "ctx",
        "ip",
        "TokenSerivce",
        "service",
        "sessionData",
        "user_id",
        "sessionKey",
        "create",
        "userInfo",
        "name",
        "success",
        "token"
    ],
    "mappings": ";;AAAA,MAAMA,OAAOC,QAAQ,WAAR,CAAb;AACAC,OAAOC,OAAP,GAAiB,cAAcH,IAAd,CAAmB;AAC1BI,eAAN,GAAoB;AAAA;;AAAA;AAChB,kBAAMC,WAAW,MAAKC,IAAL,CAAU,UAAV,CAAjB;AACA,kBAAMC,WAAW,MAAKD,IAAL,CAAU,UAAV,CAAjB;AACA,kBAAME,QAAQ,MAAM,MAAKC,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC1CL,0BAAUA;AADgC,aAA1B,EAEjBM,IAFiB,EAApB;AAGA,gBAAIC,MAAMC,OAAN,CAAcL,KAAd,CAAJ,EAA0B;AACtB,uBAAO,MAAKM,IAAL,CAAU,GAAV,EAAe,YAAf,CAAP;AACH;AACDC,oBAAQC,GAAR,CAAYJ,MAAMK,GAAN,CAAUV,WAAW,EAAX,GAAgBC,MAAMU,aAAhC,CAAZ;AACAH,oBAAQC,GAAR,CAAYR,MAAMD,QAAlB;AACA,gBAAIK,MAAMK,GAAN,CAAUV,WAAW,EAAX,GAAgBC,MAAMU,aAAhC,MAAmDV,MAAMD,QAA7D,EAAuE;AACnE,uBAAO,MAAKO,IAAL,CAAU,GAAV,EAAe,aAAf,CAAP;AACH;AACD;AACA,kBAAM,MAAKL,KAAL,CAAW,OAAX,EAAoBC,KAApB,CAA0B;AAC5BS,oBAAIX,MAAMW;AADkB,aAA1B,EAEHC,MAFG,CAEI;AACNC,iCAAiBC,SAASC,KAAKC,GAAL,KAAa,IAAtB,CADX;AAENC,+BAAe,MAAKC,GAAL,CAASC;AAFlB,aAFJ,CAAN;AAMA,kBAAMC,eAAe,MAAKC,OAAL,CAAa,OAAb,EAAsB,OAAtB,CAArB;AACA,gBAAIC,cAAc,EAAlB;AACAA,wBAAYC,OAAZ,GAAsBvB,MAAMW,EAA5B;AACA,kBAAMa,aAAa,MAAMJ,aAAaK,MAAb,CAAoBH,WAApB,CAAzB;AACA,gBAAIlB,MAAMC,OAAN,CAAcmB,UAAd,CAAJ,EAA+B;AAC3B,uBAAO,MAAKlB,IAAL,CAAU,MAAV,CAAP;AACH;AACD,kBAAMoB,WAAW;AACbf,oBAAIX,MAAMW,EADG;AAEbd,0BAAUG,MAAMH,QAFH;AAGb8B,sBAAK3B,MAAM2B;AAHE,aAAjB;AAKA,mBAAO,MAAKC,OAAL,CAAa;AAChBC,uBAAOL,UADS;AAEhBE,0BAAUA;AAFM,aAAb,CAAP;AAjCgB;AAqCnB;AAtC+B,CAApC",
    "file": "..\\..\\..\\src\\admin\\controller\\auth.js",
    "sourcesContent": [
        "const Base = require('./base.js');\r\nmodule.exports = class extends Base {\r\n    async loginAction() {\r\n        const username = this.post('username');\r\n        const password = this.post('password');\r\n        const admin = await this.model('admin').where({\r\n            username: username\r\n        }).find();\r\n        if (think.isEmpty(admin)) {\r\n            return this.fail(401, '用户名或密码不正确!');\r\n        }\r\n        console.log(think.md5(password + '' + admin.password_salt));\r\n        console.log(admin.password);\r\n        if (think.md5(password + '' + admin.password_salt) !== admin.password) {\r\n            return this.fail(400, '用户名或密码不正确!!');\r\n        }\r\n        // 更新登录信息\r\n        await this.model('admin').where({\r\n            id: admin.id\r\n        }).update({\r\n            last_login_time: parseInt(Date.now() / 1000),\r\n            last_login_ip: this.ctx.ip\r\n        });\r\n        const TokenSerivce = this.service('token', 'admin');\r\n        let sessionData = {}\r\n        sessionData.user_id = admin.id\r\n        const sessionKey = await TokenSerivce.create(sessionData);\r\n        if (think.isEmpty(sessionKey)) {\r\n            return this.fail('登录失败');\r\n        }\r\n        const userInfo = {\r\n            id: admin.id,\r\n            username: admin.username,\r\n            name:admin.name\r\n        };\r\n        return this.success({\r\n            token: sessionKey,\r\n            userInfo: userInfo\r\n        });\r\n    }\r\n};"
    ]
}